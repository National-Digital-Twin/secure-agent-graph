# SPDX-License-Identifier: Apache-2.0
# Â© Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
# and is legally attributed to the Department for Business and Trade (UK) as the governing entity.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: SC Graph Build & Deploy

on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: ${{ !contains(github.ref_name, 'release/') }}

permissions:
    contents: read
    packages: write
    id-token: write

jobs:
  build-maven:
    runs-on: ubuntu-latest
    env:
      MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress"
    outputs:
      PROJECT_VERSION: ${{ steps.get-version-maven.outputs.PROJECT_VERSION}}
      FUSEKI_SERVER_VERSION: ${{ steps.get-version-maven.outputs.FUSEKI_SERVER_VERSION }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'pom.xml'

    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github</id><username>${{ github.actor }}</username><password>${{ secrets.GH_PACKAGES_PAT }}</password></server></servers></settings>" > ~/.m2/settings.xml

    - name: Debug Maven settings
      run: cat ~/.m2/settings.xml

    - name: Build with Maven
      id: get-version-maven
      run: |
        mvn clean install $MAVEN_CLI_OPTS -Dgpg.skip=true -Dlicense.skip=true
        function get_version(){
          local version=$(mvn -q -f pom.xml -Dexec.executable=echo -Dexec.args="\${$1}" --non-recursive exec:exec)
          echo "$version"
        }
        PROJECT_VERSION=$(get_version project.version)
        FUSEKI_SERVER_VERSION=$(get_version ver.fuseki-server)
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_OUTPUT
        echo "FUSEKI_SERVER_VERSION=$FUSEKI_SERVER_VERSION" >> $GITHUB_OUTPUT
        echo $PROJECT_VERSION

    - name: Retain target outputs
      uses: actions/upload-artifact@v4
      with:
        name: all-targets
        path: '**/target/'


  build-tag-push:
    needs: build-maven
    uses: National-Digital-Twin/aws-integration-testing/.github/workflows/build-tag-push-docker-image-to-ecr.yml@main
    with:
        image_tag: ${{needs.build-maven.outputs.PROJECT_VERSION}}-${{github.sha}}
        container_repo: 'secure-agent-graph'
        path_to_dockerfile: 'sag-docker'
        project_version: ${{needs.build-maven.outputs.PROJECT_VERSION}}
    secrets: inherit

  copy-config-files:
    needs: build-maven
    uses: National-Digital-Twin/aws-integration-testing/.github/workflows/copy-files-to-ec2-instance.yml@main
    with:
      directory_name: 'sag-docker/mnt'
    secrets: inherit

  docker-compose-up:
    needs: [copy-config-files, build-tag-push]
    uses: National-Digital-Twin/aws-integration-testing/.github/workflows/docker-compose-up.yml@main
    with:
      docker-compose-file-name: 'docker-compose-github.yaml'
    secrets: inherit
